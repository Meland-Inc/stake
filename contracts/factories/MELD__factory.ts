/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {Signer, utils, Contract, ContractFactory, Overrides} from "ethers";
import {Provider, TransactionRequest} from "@ethersproject/providers";
import type {MELD, MELDInterface} from "../MELD";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_newImplementation",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
    ],
    name: "NewPrepareUpgradeImpl",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "deplay",
        type: "uint256",
      },
    ],
    name: "NewUpgradeDelay",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "BP",
    outputs: [
      {
        internalType: "contract BPContract",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BPDisabledForever",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bpEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_bp",
        type: "address",
      },
    ],
    name: "setBPAddrss",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_enabled",
        type: "bool",
      },
    ],
    name: "setBpEnabled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setBotProtectionDisableForever",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getMaxMints",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newImplementation",
        type: "address",
      },
    ],
    name: "setPrepareUpgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delay",
        type: "uint256",
      },
    ],
    name: "setUpgradeDelay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5060805161229361004560003960008181610884015281816108c40152818161099301526109d301526122936000f3fe6080604052600436106101c25760003560e01c80635bdf01c8116100f75780639606d20111610095578063a9059cbb11610064578063a9059cbb146104f3578063c818c28014610513578063dd62ed3e14610528578063f2fde38b1461056e57600080fd5b80639606d201146104725780639cfdbd5e14610492578063a0712d68146104b3578063a457c2d7146104d357600080fd5b806379cc6790116100d157806379cc6790146103f65780638129fc1c146104165780638da5cb5b1461042b57806395d89b411461045d57600080fd5b80635bdf01c81461039657806370a08231146103ab578063715018a6146103e157600080fd5b806326898da9116101645780633659cfe61161013e5780633659cfe614610323578063395093511461034357806342966c68146103635780634f1ef2861461038357600080fd5b806326898da9146102c3578063313ce567146102e5578063346168051461030157600080fd5b806318160ddd116101a057806318160ddd146102445780631a31bd4114610263578063206a8a221461028357806323b872dd146102a357600080fd5b806306fdde03146101c7578063095ea7b3146101f25780631138980814610222575b600080fd5b3480156101d357600080fd5b506101dc61058e565b6040516101e99190611d57565b60405180910390f35b3480156101fe57600080fd5b5061021261020d366004611da6565b610620565b60405190151581526020016101e9565b34801561022e57600080fd5b5061024261023d366004611dd0565b610637565b005b34801561025057600080fd5b506035545b6040519081526020016101e9565b34801561026f57600080fd5b5061024261027e366004611dd0565b6106e7565b34801561028f57600080fd5b5061024261029e366004611deb565b610784565b3480156102af57600080fd5b506102126102be366004611e0d565b6107cd565b3480156102cf57600080fd5b5061012d5461021290600160a01b900460ff1681565b3480156102f157600080fd5b50604051601281526020016101e9565b34801561030d57600080fd5b5061012d5461021290600160a81b900460ff1681565b34801561032f57600080fd5b5061024261033e366004611dd0565b610879565b34801561034f57600080fd5b5061021261035e366004611da6565b610942565b34801561036f57600080fd5b5061024261037e366004611e49565b61097e565b610242610391366004611e78565b610988565b3480156103a257600080fd5b50610255610a42565b3480156103b757600080fd5b506102556103c6366004611dd0565b6001600160a01b031660009081526033602052604090205490565b3480156103ed57600080fd5b50610242610a63565b34801561040257600080fd5b50610242610411366004611da6565b610a99565b34801561042257600080fd5b50610242610b1f565b34801561043757600080fd5b506065546001600160a01b03165b6040516001600160a01b0390911681526020016101e9565b34801561046957600080fd5b506101dc610bff565b34801561047e57600080fd5b5061024261048d366004611e49565b610c0e565b34801561049e57600080fd5b5061012d54610445906001600160a01b031681565b3480156104bf57600080fd5b506102426104ce366004611e49565b610cba565b3480156104df57600080fd5b506102126104ee366004611da6565b610d60565b3480156104ff57600080fd5b5061021261050e366004611da6565b610df9565b34801561051f57600080fd5b50610242610e06565b34801561053457600080fd5b50610255610543366004611f3a565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b34801561057a57600080fd5b50610242610589366004611dd0565b610e5e565b60606036805461059d90611f6d565b80601f01602080910402602001604051908101604052809291908181526020018280546105c990611f6d565b80156106165780601f106105eb57610100808354040283529160200191610616565b820191906000526020600020905b8154815290600101906020018083116105f957829003601f168201915b5050505050905090565b600061062d338484610ef6565b5060015b92915050565b6065546001600160a01b0316331461066a5760405162461bcd60e51b815260040161066190611fa8565b60405180910390fd5b61012d546001600160a01b0316156106c45760405162461bcd60e51b815260206004820152601c60248201527f43616e206f6e6c7920626520696e697469616c697a6564206f6e6365000000006044820152606401610661565b61012d80546001600160a01b0319166001600160a01b0392909216919091179055565b6065546001600160a01b031633146107115760405162461bcd60e51b815260040161066190611fa8565b6040805180820182526001600160a01b03831680825242602092830181905261012f80546001600160a01b031916831790556101308190558351918252918101919091527fcf33b9b7b71796171975286c240694dbc88ef404a7dafb7943c812b2d2ea2fb991015b60405180910390a150565b6065546001600160a01b031633146107ae5760405162461bcd60e51b815260040161066190611fa8565b61012d8054911515600160a01b0260ff60a01b19909216919091179055565b60006107da84848461101a565b6001600160a01b03841660009081526034602090815260408083203384529091529020548281101561085f5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b6064820152608401610661565b61086c8533858403610ef6565b60019150505b9392505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156108c25760405162461bcd60e51b815260040161066190611fdd565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166108f46111f5565b6001600160a01b03161461091a5760405162461bcd60e51b815260040161066190612029565b61092381611223565b6040805160008082526020820190925261093f9183919061133d565b50565b3360008181526034602090815260408083206001600160a01b0387168452909152812054909161062d91859061097990869061208b565b610ef6565b61093f3382611488565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156109d15760405162461bcd60e51b815260040161066190611fdd565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610a036111f5565b6001600160a01b031614610a295760405162461bcd60e51b815260040161066190612029565b610a3282611223565b610a3e8282600161133d565b5050565b6000610a506012600a612187565b610a5e906377359400612196565b905090565b6065546001600160a01b03163314610a8d5760405162461bcd60e51b815260040161066190611fa8565b610a9760006115e2565b565b6000610aa58333610543565b905081811015610b035760405162461bcd60e51b8152602060048201526024808201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604482015263616e636560e01b6064820152608401610661565b610b108333848403610ef6565b610b1a8383611488565b505050565b600054610100900460ff1680610b38575060005460ff16155b610b545760405162461bcd60e51b8152600401610661906121b5565b600054610100900460ff16158015610b76576000805461ffff19166101011790555b610bbd604051806040016040528060098152602001684d656c616e642e616960b81b815250604051806040016040528060048152602001631351531160e21b815250611634565b610bc56116b3565b610bcd61172e565b610bd56116b3565b61012d805460ff60a81b191690556212750061012e55801561093f576000805461ff001916905550565b60606037805461059d90611f6d565b6065546001600160a01b03163314610c385760405162461bcd60e51b815260040161066190611fa8565b6202a300811015610c845760405162461bcd60e51b81526020600482015260166024820152754d696e696d756d2074696d652069732032206461797360501b6044820152606401610661565b61012e8190556040518181527f09325ac6d11927d197b5283bc2e7490442ea8a033a071589b8a7a0653587d51290602001610779565b6065546001600160a01b03163314610ce45760405162461bcd60e51b815260040161066190611fa8565b610cec610a42565b603554610cf9908361208b565b1115610d565760405162461bcd60e51b815260206004820152602660248201527f4578636565647320746865206d6178696d756d206e756d626572206f66206d696044820152656e7461626c6560d01b6064820152608401610661565b61093f3382611795565b3360009081526034602090815260408083206001600160a01b038616845290915281205482811015610de25760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610661565b610def3385858403610ef6565b5060019392505050565b600061062d33848461101a565b6065546001600160a01b03163314610e305760405162461bcd60e51b815260040161066190611fa8565b61012d54600160a81b900460ff1615610e4857600080fd5b61012d805460ff60a81b1916600160a81b179055565b6065546001600160a01b03163314610e885760405162461bcd60e51b815260040161066190611fa8565b6001600160a01b038116610eed5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610661565b61093f816115e2565b6001600160a01b038316610f585760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610661565b6001600160a01b038216610fb95760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610661565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03831661107e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610661565b6001600160a01b0382166110e05760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610661565b6110eb838383611880565b6001600160a01b038316600090815260336020526040902054818110156111635760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610661565b6001600160a01b0380851660009081526033602052604080822085850390559185168152908120805484929061119a90849061208b565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516111e691815260200190565b60405180910390a35b50505050565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6065546001600160a01b0316331461124d5760405162461bcd60e51b815260040161066190611fa8565b61012f546001600160a01b038281169116146112c05760405162461bcd60e51b815260206004820152602c60248201527f5570677261646520636f6e74726163747320617265206e6f7420696e2074686560448201526b20726561647920717565756560a01b6064820152608401610661565b61012e54610130546112d390429061191e565b1161093f5760405162461bcd60e51b815260206004820152603460248201527f5570677261646520636f6e747261637473206d7573742062652070726570617260448201527365642032206461797320696e20616476616e636560601b6064820152608401610661565b60006113476111f5565b90506113528461192a565b60008351118061135f5750815b156113705761136e84846119cf565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff1661148157805460ff191660011781556040516001600160a01b03831660248201526113ef90869060440160408051601f198184030181529190526020810180516001600160e01b0316631b2ce7f360e11b1790526119cf565b50805460ff191681556114006111f5565b6001600160a01b0316826001600160a01b0316146114785760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201526e75727468657220757067726164657360881b6064820152608401610661565b61148185611aba565b5050505050565b6001600160a01b0382166114e85760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610661565b6114f482600083611880565b6001600160a01b038216600090815260336020526040902054818110156115685760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610661565b6001600160a01b0383166000908152603360205260408120838303905560358054849290611597908490612203565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff168061164d575060005460ff16155b6116695760405162461bcd60e51b8152600401610661906121b5565b600054610100900460ff1615801561168b576000805461ffff19166101011790555b611693611afa565b61169d8383611b64565b8015610b1a576000805461ff0019169055505050565b600054610100900460ff16806116cc575060005460ff16155b6116e85760405162461bcd60e51b8152600401610661906121b5565b600054610100900460ff1615801561170a576000805461ffff19166101011790555b611712611afa565b61171a611afa565b801561093f576000805461ff001916905550565b600054610100900460ff1680611747575060005460ff16155b6117635760405162461bcd60e51b8152600401610661906121b5565b600054610100900460ff16158015611785576000805461ffff19166101011790555b61178d611afa565b61171a611bf9565b6001600160a01b0382166117eb5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610661565b6117f760008383611880565b8060356000828254611809919061208b565b90915550506001600160a01b0382166000908152603360205260408120805483929061183690849061208b565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b61012d54600160a01b900460ff1680156118a5575061012d54600160a81b900460ff16155b15610b1a5761012d54604051637e2f3afd60e01b81526001600160a01b03858116600483015284811660248301526044820184905290911690637e2f3afd90606401600060405180830381600087803b15801561190157600080fd5b505af1158015611915573d6000803e3d6000fd5b50505050505050565b60006108728284612203565b803b61198e5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610661565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b6060823b611a2e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610661565b600080846001600160a01b031684604051611a49919061221a565b600060405180830381855af49150503d8060008114611a84576040519150601f19603f3d011682016040523d82523d6000602084013e611a89565b606091505b5091509150611ab1828260405180606001604052806027815260200161223760279139611c59565b95945050505050565b611ac38161192a565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b600054610100900460ff1680611b13575060005460ff16155b611b2f5760405162461bcd60e51b8152600401610661906121b5565b600054610100900460ff1615801561171a576000805461ffff1916610101179055801561093f576000805461ff001916905550565b600054610100900460ff1680611b7d575060005460ff16155b611b995760405162461bcd60e51b8152600401610661906121b5565b600054610100900460ff16158015611bbb576000805461ffff19166101011790555b8251611bce906036906020860190611c92565b508151611be2906037906020850190611c92565b508015610b1a576000805461ff0019169055505050565b600054610100900460ff1680611c12575060005460ff16155b611c2e5760405162461bcd60e51b8152600401610661906121b5565b600054610100900460ff16158015611c50576000805461ffff19166101011790555b61171a336115e2565b60608315611c68575081610872565b825115611c785782518084602001fd5b8160405162461bcd60e51b81526004016106619190611d57565b828054611c9e90611f6d565b90600052602060002090601f016020900481019282611cc05760008555611d06565b82601f10611cd957805160ff1916838001178555611d06565b82800160010185558215611d06579182015b82811115611d06578251825591602001919060010190611ceb565b50611d12929150611d16565b5090565b5b80821115611d125760008155600101611d17565b60005b83811015611d46578181015183820152602001611d2e565b838111156111ef5750506000910152565b6020815260008251806020840152611d76816040850160208701611d2b565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114611da157600080fd5b919050565b60008060408385031215611db957600080fd5b611dc283611d8a565b946020939093013593505050565b600060208284031215611de257600080fd5b61087282611d8a565b600060208284031215611dfd57600080fd5b8135801515811461087257600080fd5b600080600060608486031215611e2257600080fd5b611e2b84611d8a565b9250611e3960208501611d8a565b9150604084013590509250925092565b600060208284031215611e5b57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215611e8b57600080fd5b611e9483611d8a565b9150602083013567ffffffffffffffff80821115611eb157600080fd5b818501915085601f830112611ec557600080fd5b813581811115611ed757611ed7611e62565b604051601f8201601f19908116603f01168101908382118183101715611eff57611eff611e62565b81604052828152886020848701011115611f1857600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60008060408385031215611f4d57600080fd5b611f5683611d8a565b9150611f6460208401611d8a565b90509250929050565b600181811c90821680611f8157607f821691505b60208210811415611fa257634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b6000821982111561209e5761209e612075565b500190565b600181815b808511156120de5781600019048211156120c4576120c4612075565b808516156120d157918102915b93841c93908002906120a8565b509250929050565b6000826120f557506001610631565b8161210257506000610631565b816001811461211857600281146121225761213e565b6001915050610631565b60ff84111561213357612133612075565b50506001821b610631565b5060208310610133831016604e8410600b8410161715612161575081810a610631565b61216b83836120a3565b806000190482111561217f5761217f612075565b029392505050565b600061087260ff8416836120e6565b60008160001904831182151516156121b0576121b0612075565b500290565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60008282101561221557612215612075565b500390565b6000825161222c818460208701611d2b565b919091019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220cacbb84b9910d048d903d25c4783ab3576ab32d4d2c56a61ac0567655cfe15c464736f6c63430008090033";

export class MELD__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & {from?: string | Promise<string>}
  ): Promise<MELD> {
    return super.deploy(overrides || {}) as Promise<MELD>;
  }
  getDeployTransaction(
    overrides?: Overrides & {from?: string | Promise<string>}
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MELD {
    return super.attach(address) as MELD;
  }
  connect(signer: Signer): MELD__factory {
    return super.connect(signer) as MELD__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MELDInterface {
    return new utils.Interface(_abi) as MELDInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MELD {
    return new Contract(address, _abi, signerOrProvider) as MELD;
  }
}
