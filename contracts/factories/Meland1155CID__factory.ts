/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {Signer, utils, Contract, ContractFactory, Overrides} from "ethers";
import {Provider, TransactionRequest} from "@ethersproject/providers";
import type {Meland1155CID, Meland1155CIDInterface} from "../Meland1155CID";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getCidByTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506119d0806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a85760003560e01c80634e1273f4116100715780634e1273f41461014b5780636b20c4541461016b578063a22cb4651461017e578063e985e9c514610191578063f242432a146101cd578063f5298aca146101e057600080fd5b8062fdd58e146100ad57806301ffc9a7146100d35780630e89341c146100f65780632eb2c2d6146101165780633ef780bc1461012b575b600080fd5b6100c06100bb366004610ffc565b6101f3565b6040519081526020015b60405180910390f35b6100e66100e136600461103f565b61028c565b60405190151581526020016100ca565b610109610104366004611063565b6102de565b6040516100ca91906110c9565b610129610124366004611228565b610372565b005b6100c0610139366004611063565b600090815260ca602052604090205490565b61015e6101593660046112d2565b610409565b6040516100ca91906113d8565b6101296101793660046113eb565b610533565b61012961018c36600461145f565b61057b565b6100e661019f36600461149b565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205460ff1690565b6101296101db3660046114ce565b61058a565b6101296101ee366004611533565b6105cf565b60006001600160a01b0383166102645760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b5060009081526065602090815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b14806102bd57506001600160e01b031982166303a24d0760e21b145b806102d857506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060606780546102ed90611566565b80601f016020809104026020016040519081016040528092919081815260200182805461031990611566565b80156103665780601f1061033b57610100808354040283529160200191610366565b820191906000526020600020905b81548152906001019060200180831161034957829003601f168201915b50505050509050919050565b6001600160a01b03851633148061038e575061038e853361019f565b6103f55760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b606482015260840161025b565b6104028585858585610612565b5050505050565b6060815183511461046e5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b606482015260840161025b565b6000835167ffffffffffffffff81111561048a5761048a6110dc565b6040519080825280602002602001820160405280156104b3578160200160208202803683370190505b50905060005b845181101561052b576104fe8582815181106104d7576104d76115a1565b60200260200101518583815181106104f1576104f16115a1565b60200260200101516101f3565b828281518110610510576105106115a1565b6020908102919091010152610524816115cd565b90506104b9565b509392505050565b6001600160a01b03831633148061054f575061054f833361019f565b61056b5760405162461bcd60e51b815260040161025b906115e8565b6105768383836107bf565b505050565b610586338383610950565b5050565b6001600160a01b0385163314806105a657506105a6853361019f565b6105c25760405162461bcd60e51b815260040161025b906115e8565b6104028585858585610a31565b6001600160a01b0383163314806105eb57506105eb833361019f565b6106075760405162461bcd60e51b815260040161025b906115e8565b610576838383610b61565b81518351146106335760405162461bcd60e51b815260040161025b90611631565b6001600160a01b0384166106595760405162461bcd60e51b815260040161025b90611679565b33610668818787878787610c66565b60005b8451811015610751576000858281518110610688576106886115a1565b6020026020010151905060008583815181106106a6576106a66115a1565b60209081029190910181015160008481526065835260408082206001600160a01b038e1683529093529190912054909150818110156106f75760405162461bcd60e51b815260040161025b906116be565b60008381526065602090815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610736908490611708565b925050819055505050508061074a906115cd565b905061066b565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516107a1929190611720565b60405180910390a46107b7818787878787610d60565b505050505050565b6001600160a01b0383166107e55760405162461bcd60e51b815260040161025b9061174e565b80518251146108065760405162461bcd60e51b815260040161025b90611631565b600033905061082981856000868660405180602001604052806000815250610c66565b60005b83518110156108f1576000848281518110610849576108496115a1565b602002602001015190506000848381518110610867576108676115a1565b60209081029190910181015160008481526065835260408082206001600160a01b038c1683529093529190912054909150818110156108b85760405162461bcd60e51b815260040161025b90611791565b60009283526065602090815260408085206001600160a01b038b16865290915290922091039055806108e9816115cd565b91505061082c565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051610942929190611720565b60405180910390a450505050565b816001600160a01b0316836001600160a01b031614156109c45760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b606482015260840161025b565b6001600160a01b03838116600081815260666020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610a575760405162461bcd60e51b815260040161025b90611679565b33610a76818787610a6788610ecb565b610a7088610ecb565b87610c66565b60008481526065602090815260408083206001600160a01b038a16845290915290205483811015610ab95760405162461bcd60e51b815260040161025b906116be565b60008581526065602090815260408083206001600160a01b038b8116855292528083208785039055908816825281208054869290610af8908490611708565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610b58828888888888610f16565b50505050505050565b6001600160a01b038316610b875760405162461bcd60e51b815260040161025b9061174e565b33610bb681856000610b9887610ecb565b610ba187610ecb565b60405180602001604052806000815250610c66565b60008381526065602090815260408083206001600160a01b038816845290915290205482811015610bf95760405162461bcd60e51b815260040161025b90611791565b60008481526065602090815260408083206001600160a01b03898116808652918452828520888703905582518981529384018890529092908616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050505050565b6001600160a01b038516610cf15760005b8351811015610cef576000610cb1858381518110610c9757610c976115a1565b6020026020010151600090815260ca602052604090205490565b9050600160cb60008381526020019081526020016000206000828254610cd79190611708565b90915550610ce891508290506115cd565b9050610c77565b505b6001600160a01b0384166107b75760005b8351811015610b58576000610d22858381518110610c9757610c976115a1565b9050600160cb60008381526020019081526020016000206000828254610d4891906117d5565b90915550610d5991508290506115cd565b9050610d02565b6001600160a01b0384163b156107b75760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610da490899089908890889088906004016117ec565b602060405180830381600087803b158015610dbe57600080fd5b505af1925050508015610dee575060408051601f3d908101601f19168201909252610deb9181019061184a565b60015b610e9b57610dfa611867565b806308c379a01415610e345750610e0f611883565b80610e1a5750610e36565b8060405162461bcd60e51b815260040161025b91906110c9565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b606482015260840161025b565b6001600160e01b0319811663bc197c8160e01b14610b585760405162461bcd60e51b815260040161025b9061190d565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610f0557610f056115a1565b602090810291909101015292915050565b6001600160a01b0384163b156107b75760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610f5a9089908990889088908890600401611955565b602060405180830381600087803b158015610f7457600080fd5b505af1925050508015610fa4575060408051601f3d908101601f19168201909252610fa19181019061184a565b60015b610fb057610dfa611867565b6001600160e01b0319811663f23a6e6160e01b14610b585760405162461bcd60e51b815260040161025b9061190d565b80356001600160a01b0381168114610ff757600080fd5b919050565b6000806040838503121561100f57600080fd5b61101883610fe0565b946020939093013593505050565b6001600160e01b03198116811461103c57600080fd5b50565b60006020828403121561105157600080fd5b813561105c81611026565b9392505050565b60006020828403121561107557600080fd5b5035919050565b6000815180845260005b818110156110a257602081850181015186830182015201611086565b818111156110b4576000602083870101525b50601f01601f19169290920160200192915050565b60208152600061105c602083018461107c565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715611118576111186110dc565b6040525050565b600067ffffffffffffffff821115611139576111396110dc565b5060051b60200190565b600082601f83011261115457600080fd5b813560206111618261111f565b60405161116e82826110f2565b83815260059390931b850182019282810191508684111561118e57600080fd5b8286015b848110156111a95780358352918301918301611192565b509695505050505050565b600082601f8301126111c557600080fd5b813567ffffffffffffffff8111156111df576111df6110dc565b6040516111f6601f8301601f1916602001826110f2565b81815284602083860101111561120b57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561124057600080fd5b61124986610fe0565b945061125760208701610fe0565b9350604086013567ffffffffffffffff8082111561127457600080fd5b61128089838a01611143565b9450606088013591508082111561129657600080fd5b6112a289838a01611143565b935060808801359150808211156112b857600080fd5b506112c5888289016111b4565b9150509295509295909350565b600080604083850312156112e557600080fd5b823567ffffffffffffffff808211156112fd57600080fd5b818501915085601f83011261131157600080fd5b8135602061131e8261111f565b60405161132b82826110f2565b83815260059390931b850182019282810191508984111561134b57600080fd5b948201945b838610156113705761136186610fe0565b82529482019490820190611350565b9650508601359250508082111561138657600080fd5b5061139385828601611143565b9150509250929050565b600081518084526020808501945080840160005b838110156113cd578151875295820195908201906001016113b1565b509495945050505050565b60208152600061105c602083018461139d565b60008060006060848603121561140057600080fd5b61140984610fe0565b9250602084013567ffffffffffffffff8082111561142657600080fd5b61143287838801611143565b9350604086013591508082111561144857600080fd5b5061145586828701611143565b9150509250925092565b6000806040838503121561147257600080fd5b61147b83610fe0565b91506020830135801515811461149057600080fd5b809150509250929050565b600080604083850312156114ae57600080fd5b6114b783610fe0565b91506114c560208401610fe0565b90509250929050565b600080600080600060a086880312156114e657600080fd5b6114ef86610fe0565b94506114fd60208701610fe0565b93506040860135925060608601359150608086013567ffffffffffffffff81111561152757600080fd5b6112c5888289016111b4565b60008060006060848603121561154857600080fd5b61155184610fe0565b95602085013595506040909401359392505050565b600181811c9082168061157a57607f821691505b6020821081141561159b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156115e1576115e16115b7565b5060010190565b60208082526029908201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260408201526808185c1c1c9bdd995960ba1b606082015260800190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b6000821982111561171b5761171b6115b7565b500190565b604081526000611733604083018561139d565b8281036020840152611745818561139d565b95945050505050565b60208082526023908201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526024908201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604082015263616e636560e01b606082015260800190565b6000828210156117e7576117e76115b7565b500390565b6001600160a01b0386811682528516602082015260a0604082018190526000906118189083018661139d565b828103606084015261182a818661139d565b9050828103608084015261183e818561107c565b98975050505050505050565b60006020828403121561185c57600080fd5b815161105c81611026565b600060033d11156118805760046000803e5060005160e01c5b90565b600060443d10156118915790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156118c157505050505090565b82850191508151818111156118d95750505050505090565b843d87010160208285010111156118f35750505050505090565b611902602082860101876110f2565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061198f9083018461107c565b97965050505050505056fea2646970667358221220bcce5bb30bf170fc74964e89d6a9a6fcc91de008174497d8754a6d357c4af90764736f6c63430008090033";

export class Meland1155CID__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & {from?: string | Promise<string>}
  ): Promise<Meland1155CID> {
    return super.deploy(overrides || {}) as Promise<Meland1155CID>;
  }
  getDeployTransaction(
    overrides?: Overrides & {from?: string | Promise<string>}
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Meland1155CID {
    return super.attach(address) as Meland1155CID;
  }
  connect(signer: Signer): Meland1155CID__factory {
    return super.connect(signer) as Meland1155CID__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Meland1155CIDInterface {
    return new utils.Interface(_abi) as Meland1155CIDInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Meland1155CID {
    return new Contract(address, _abi, signerOrProvider) as Meland1155CID;
  }
}
