/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {Signer, utils, Contract, ContractFactory, Overrides} from "ethers";
import {Provider, TransactionRequest} from "@ethersproject/providers";
import type {
  MelandTierStorage,
  MelandTierStorageInterface,
} from "../MelandTierStorage";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "rewardId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "erc1155RewardIds",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "erc721RewardIds",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "erc20RewardIds",
        type: "uint256[]",
      },
    ],
    name: "CreateReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "cid",
        type: "uint256",
      },
    ],
    name: "RewaardPoolUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "cid",
        type: "uint256",
      },
    ],
    name: "TierStartSale",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "erc1155RewardById",
    outputs: [
      {
        internalType: "contract IERC1155Upgradeable",
        name: "erc1155",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "erc20RewardById",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "erc20",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "erc721RewardById",
    outputs: [
      {
        internalType: "contract IERC721Upgradeable",
        name: "erc721",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cid",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "contract IERC1155Upgradeable",
            name: "erc1155",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct MelandTierStorage.ERC1155Reward[]",
        name: "erc1155rewards",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "contract IERC721Upgradeable",
            name: "erc721",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
        ],
        internalType: "struct MelandTierStorage.ERC721Reward[]",
        name: "erc721rewards",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "contract IERC20Upgradeable",
            name: "erc20",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct MelandTierStorage.ERC20Reward[]",
        name: "erc20rewards",
        type: "tuple[]",
      },
    ],
    name: "addOptionReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cid",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "contract IERC1155Upgradeable",
            name: "erc1155",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct MelandTierStorage.ERC1155Reward[]",
        name: "erc1155rewards",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "contract IERC721Upgradeable",
            name: "erc721",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
        ],
        internalType: "struct MelandTierStorage.ERC721Reward[]",
        name: "erc721rewards",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "contract IERC20Upgradeable",
            name: "erc20",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct MelandTierStorage.ERC20Reward[]",
        name: "erc20rewards",
        type: "tuple[]",
      },
    ],
    name: "add100PercentReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610c01806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806357587f3f1461005c5780637672f2b514610071578063c14ee0aa146100b7578063d0a7917a14610109578063e1e9646a1461013c575b600080fd5b61006f61006a366004610889565b61014f565b005b61009a61007f3660046109fb565b6039602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100ea6100c53660046109fb565b603860205260009081526040902080546001909101546001600160a01b039091169082565b604080516001600160a01b0390931683526020830191909152016100ae565b6100ea6101173660046109fb565b603760205260009081526040902080546001909101546001600160a01b039091169082565b61006f61014a366004610889565b6101de565b6000848152603c6020526040902054156101845760405162461bcd60e51b815260040161017b90610a14565b60405180910390fd5b6000848152603d6020526040902061019d84848461021f565b8154600181018355600092835260208320015560405185917fe4b7e0bb3edd3119b8854a52d62b18a5a44ba6827d49ea293a7f44c7b43dc26191a250505050565b6000848152603c60205260409020541561020a5760405162461bcd60e51b815260040161017b90610a14565b6000848152603b6020526040902061019d8484845b600061022a60335490565b905061023a603380546001019055565b606080606060005b87518160ff161015610393576000888260ff168151811061026557610265610a85565b60200260200101519050600061027a60345490565b905061028a603480546001019055565b6000818152603960209081526040909120835181546001600160a01b0319166001600160a01b0390911617815583820151805185936102d0926001850192910190610667565b50604082015180516102ec916002840191602090910190610667565b5090505080868460ff168151811061030657610306610a85565b602090810291909101015281516001600160a01b0316632eb2c2d63330856020015186604001516040518563ffffffff1660e01b815260040161034c9493929190610ad6565b600060405180830381600087803b15801561036657600080fd5b505af115801561037a573d6000803e3d6000fd5b505050505050808061038b90610b31565b915050610242565b5060005b86518160ff1610156104c9576000878260ff16815181106103ba576103ba610a85565b6020026020010151905060006103cf60355490565b90506103df603580546001019055565b6000818152603760209081526040909120835181546001600160a01b0319166001600160a01b039091161781559083015160019091015584518190869060ff861690811061042f5761042f610a85565b602090810291909101015281516001600160a01b03166323b872dd3360208501516040516001600160e01b031960e085901b1681526001600160a01b0390921660048301523060248301526044820152606401600060405180830381600087803b15801561049c57600080fd5b505af11580156104b0573d6000803e3d6000fd5b50505050505080806104c190610b31565b915050610397565b5060005b85518160ff161015610620576000868260ff16815181106104f0576104f0610a85565b60200260200101519050600061050560365490565b9050610515603680546001019055565b6000818152603860209081526040909120835181546001600160a01b0319166001600160a01b039091161781559083015160019091015583518190859060ff861690811061056557610565610a85565b602090810291909101015281516001600160a01b03166323b872dd3360208501516040516001600160e01b031960e085901b1681526001600160a01b0390921660048301523060248301526044820152606401602060405180830381600087803b1580156105d257600080fd5b505af11580156105e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060a9190610b5f565b505050808061061890610b31565b9150506104cd565b50837f9f00a64fbbf21f6df1536c8d31b10d31f0f577e3b4f08616e78737634627669c84848460405161065593929190610b88565b60405180910390a25050509392505050565b8280548282559060005260206000209081019282156106a2579160200282015b828111156106a2578251825591602001919060010190610687565b506106ae9291506106b2565b5090565b5b808211156106ae57600081556001016106b3565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715610700576107006106c7565b60405290565b6040516060810167ffffffffffffffff81118282101715610700576107006106c7565b604051601f8201601f1916810167ffffffffffffffff81118282101715610752576107526106c7565b604052919050565b600067ffffffffffffffff821115610774576107746106c7565b5060051b60200190565b6001600160a01b038116811461079357600080fd5b50565b600082601f8301126107a757600080fd5b813560206107bc6107b78361075a565b610729565b82815260059290921b840181019181810190868411156107db57600080fd5b8286015b848110156107f657803583529183019183016107df565b509695505050505050565b600082601f83011261081257600080fd5b813560206108226107b78361075a565b82815260069290921b8401810191818101908684111561084157600080fd5b8286015b848110156107f6576040818903121561085e5760008081fd5b6108666106dd565b81356108718161077e565b81528185013585820152835291830191604001610845565b6000806000806080858703121561089f57600080fd5b84359350602085013567ffffffffffffffff808211156108be57600080fd5b818701915087601f8301126108d257600080fd5b6108df6107b7833561075a565b82358082526020808301929160051b8501018a8111156108fe57600080fd5b602085015b818110156109a657848135111561091957600080fd5b803586016060818e03601f1901121561093157600080fd5b610939610706565b60208201356109478161077e565b815260408201358781111561095b57600080fd5b61096a8f602083860101610796565b60208301525060608201358781111561098257600080fd5b6109918f602083860101610796565b60408301525085525060209384019301610903565b50909650505060408701359150808211156109c057600080fd5b6109cc88838901610801565b935060608701359150808211156109e257600080fd5b506109ef87828801610801565b91505092959194509250565b600060208284031215610a0d57600080fd5b5035919050565b6020808252604b908201527f53616c6573206861766520616c7265616479207374617274656420616e64206360408201527f616e6e6f74206368616e67652074686520636f6e74656e74206f66207468652060608201526a1c995dd85c99081c1bdbdb60aa1b608082015260a00190565b634e487b7160e01b600052603260045260246000fd5b600081518084526020808501945080840160005b83811015610acb57815187529582019590820190600101610aaf565b509495945050505050565b6001600160a01b0385811682528416602082015260a060408201819052600090610b0290830185610a9b565b8281036060840152610b148185610a9b565b838103608090940193909352505060008152602001949350505050565b600060ff821660ff811415610b5657634e487b7160e01b600052601160045260246000fd5b60010192915050565b600060208284031215610b7157600080fd5b81518015158114610b8157600080fd5b9392505050565b606081526000610b9b6060830186610a9b565b8281036020840152610bad8186610a9b565b90508281036040840152610bc18185610a9b565b969550505050505056fea26469706673582212203195da399a66e79892b91914aec3ac7156977bb33570059f01b611a95982834d64736f6c63430008090033";

export class MelandTierStorage__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & {from?: string | Promise<string>}
  ): Promise<MelandTierStorage> {
    return super.deploy(overrides || {}) as Promise<MelandTierStorage>;
  }
  getDeployTransaction(
    overrides?: Overrides & {from?: string | Promise<string>}
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MelandTierStorage {
    return super.attach(address) as MelandTierStorage;
  }
  connect(signer: Signer): MelandTierStorage__factory {
    return super.connect(signer) as MelandTierStorage__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MelandTierStorageInterface {
    return new utils.Interface(_abi) as MelandTierStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MelandTierStorage {
    return new Contract(address, _abi, signerOrProvider) as MelandTierStorage;
  }
}
