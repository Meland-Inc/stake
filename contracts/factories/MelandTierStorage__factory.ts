/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {Signer, utils, Contract, ContractFactory, Overrides} from "ethers";
import {Provider, TransactionRequest} from "@ethersproject/providers";
import type {
  MelandTierStorage,
  MelandTierStorageInterface,
} from "../MelandTierStorage";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "cid",
        type: "uint256",
      },
    ],
    name: "RewaardPoolUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "cid",
        type: "uint256",
      },
    ],
    name: "TierStartSale",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cid",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "contract IERC1155Upgradeable",
            name: "erc1155",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct MelandTierStorage.ERC1155Reward[]",
        name: "erc1155rewards",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "contract IERC721Upgradeable",
            name: "erc721",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
        ],
        internalType: "struct MelandTierStorage.ERC721Reward[]",
        name: "erc721rewards",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "contract IERC20Upgradeable",
            name: "erc20",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct MelandTierStorage.ERC20Reward[]",
        name: "erc20rewards",
        type: "tuple[]",
      },
    ],
    name: "addOptionReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cid",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "contract IERC1155Upgradeable",
            name: "erc1155",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "tokenIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct MelandTierStorage.ERC1155Reward[]",
        name: "erc1155rewards",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "contract IERC721Upgradeable",
            name: "erc721",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
        ],
        internalType: "struct MelandTierStorage.ERC721Reward[]",
        name: "erc721rewards",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "contract IERC20Upgradeable",
            name: "erc20",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct MelandTierStorage.ERC20Reward[]",
        name: "erc20rewards",
        type: "tuple[]",
      },
    ],
    name: "add100PercentReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a7d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806357587f3f1461003b578063e1e9646a14610050575b600080fd5b61004e610049366004610761565b610063565b005b61004e61005e366004610761565b6100f2565b6000848152603c6020526040902054156100985760405162461bcd60e51b815260040161008f906108d3565b60405180910390fd5b6000848152603d602052604090206100b1848484610133565b8154600181018355600092835260208320015560405185917fe4b7e0bb3edd3119b8854a52d62b18a5a44ba6827d49ea293a7f44c7b43dc26191a250505050565b6000848152603c60205260409020541561011e5760405162461bcd60e51b815260040161008f906108d3565b6000848152603b602052604090206100b18484845b600061013e60335490565b905061014e603380546001019055565b606080606060005b87518160ff1610156102a7576000888260ff168151811061017957610179610944565b60200260200101519050600061018e60345490565b905061019e603480546001019055565b6000818152603960209081526040909120835181546001600160a01b0319166001600160a01b0390911617815583820151805185936101e492600185019291019061053f565b506040820151805161020091600284019160209091019061053f565b5090505080868460ff168151811061021a5761021a610944565b602090810291909101015281516001600160a01b0316632eb2c2d63330856020015186604001516040518563ffffffff1660e01b81526004016102609493929190610995565b600060405180830381600087803b15801561027a57600080fd5b505af115801561028e573d6000803e3d6000fd5b505050505050808061029f906109f0565b915050610156565b5060005b86518160ff1610156103dd576000878260ff16815181106102ce576102ce610944565b6020026020010151905060006102e360355490565b90506102f3603580546001019055565b6000818152603760209081526040909120835181546001600160a01b0319166001600160a01b039091161781559083015160019091015584518190869060ff861690811061034357610343610944565b602090810291909101015281516001600160a01b03166323b872dd3360208501516040516001600160e01b031960e085901b1681526001600160a01b0390921660048301523060248301526044820152606401600060405180830381600087803b1580156103b057600080fd5b505af11580156103c4573d6000803e3d6000fd5b50505050505080806103d5906109f0565b9150506102ab565b5060005b85518160ff161015610534576000868260ff168151811061040457610404610944565b60200260200101519050600061041960365490565b9050610429603680546001019055565b6000818152603860209081526040909120835181546001600160a01b0319166001600160a01b039091161781559083015160019091015583518190859060ff861690811061047957610479610944565b602090810291909101015281516001600160a01b03166323b872dd3360208501516040516001600160e01b031960e085901b1681526001600160a01b0390921660048301523060248301526044820152606401602060405180830381600087803b1580156104e657600080fd5b505af11580156104fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051e9190610a1e565b505050808061052c906109f0565b9150506103e1565b505050509392505050565b82805482825590600052602060002090810192821561057a579160200282015b8281111561057a57825182559160200191906001019061055f565b5061058692915061058a565b5090565b5b80821115610586576000815560010161058b565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156105d8576105d861059f565b60405290565b6040516060810167ffffffffffffffff811182821017156105d8576105d861059f565b604051601f8201601f1916810167ffffffffffffffff8111828210171561062a5761062a61059f565b604052919050565b600067ffffffffffffffff82111561064c5761064c61059f565b5060051b60200190565b6001600160a01b038116811461066b57600080fd5b50565b600082601f83011261067f57600080fd5b8135602061069461068f83610632565b610601565b82815260059290921b840181019181810190868411156106b357600080fd5b8286015b848110156106ce57803583529183019183016106b7565b509695505050505050565b600082601f8301126106ea57600080fd5b813560206106fa61068f83610632565b82815260069290921b8401810191818101908684111561071957600080fd5b8286015b848110156106ce57604081890312156107365760008081fd5b61073e6105b5565b813561074981610656565b8152818501358582015283529183019160400161071d565b6000806000806080858703121561077757600080fd5b84359350602085013567ffffffffffffffff8082111561079657600080fd5b818701915087601f8301126107aa57600080fd5b6107b761068f8335610632565b82358082526020808301929160051b8501018a8111156107d657600080fd5b602085015b8181101561087e5784813511156107f157600080fd5b803586016060818e03601f1901121561080957600080fd5b6108116105de565b602082013561081f81610656565b815260408201358781111561083357600080fd5b6108428f60208386010161066e565b60208301525060608201358781111561085a57600080fd5b6108698f60208386010161066e565b604083015250855250602093840193016107db565b509096505050604087013591508082111561089857600080fd5b6108a4888389016106d9565b935060608701359150808211156108ba57600080fd5b506108c7878288016106d9565b91505092959194509250565b6020808252604b908201527f53616c6573206861766520616c7265616479207374617274656420616e64206360408201527f616e6e6f74206368616e67652074686520636f6e74656e74206f66207468652060608201526a1c995dd85c99081c1bdbdb60aa1b608082015260a00190565b634e487b7160e01b600052603260045260246000fd5b600081518084526020808501945080840160005b8381101561098a5781518752958201959082019060010161096e565b509495945050505050565b6001600160a01b0385811682528416602082015260a0604082018190526000906109c19083018561095a565b82810360608401526109d3818561095a565b838103608090940193909352505060008152602001949350505050565b600060ff821660ff811415610a1557634e487b7160e01b600052601160045260246000fd5b60010192915050565b600060208284031215610a3057600080fd5b81518015158114610a4057600080fd5b939250505056fea2646970667358221220fa0cca849348f2b00faa645775b9eb96ab6061b2cd15941a345a1116d859924764736f6c63430008090033";

export class MelandTierStorage__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & {from?: string | Promise<string>}
  ): Promise<MelandTierStorage> {
    return super.deploy(overrides || {}) as Promise<MelandTierStorage>;
  }
  getDeployTransaction(
    overrides?: Overrides & {from?: string | Promise<string>}
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MelandTierStorage {
    return super.attach(address) as MelandTierStorage;
  }
  connect(signer: Signer): MelandTierStorage__factory {
    return super.connect(signer) as MelandTierStorage__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MelandTierStorageInterface {
    return new utils.Interface(_abi) as MelandTierStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MelandTierStorage {
    return new Contract(address, _abi, signerOrProvider) as MelandTierStorage;
  }
}
