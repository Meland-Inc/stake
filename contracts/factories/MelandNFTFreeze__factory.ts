/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {Contract, Signer, utils} from "ethers";
import {Provider} from "@ethersproject/providers";
import type {
  MelandNFTFreeze,
  MelandNFTFreezeInterface,
} from "../MelandNFTFreeze";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "_freezeEnabled",
        type: "bool",
      },
    ],
    name: "FreezeEnabledUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_bool",
        type: "bool",
      },
    ],
    name: "FreezeWhiteListUpdate",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ereezeExpiredAtMapById",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class MelandNFTFreeze__factory {
  static readonly abi = _abi;
  static createInterface(): MelandNFTFreezeInterface {
    return new utils.Interface(_abi) as MelandNFTFreezeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MelandNFTFreeze {
    return new Contract(address, _abi, signerOrProvider) as MelandNFTFreeze;
  }
}
