/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {Signer, utils, Contract, ContractFactory, Overrides} from "ethers";
import {Provider, TransactionRequest} from "@ethersproject/providers";
import type {Faucet, FaucetInterface} from "../Faucet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "gmAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "limit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20MELD",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20MELD",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_gm",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "recive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reciveAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405268056bc75e2d6310000060685534801561001d57600080fd5b506109428061002d6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b146100c5578063a4d66daf146100ef578063aa01ac2214610106578063f2fde38b14610119578063fc0c546a1461012c57600080fd5b80632a8c01c61461009857806335897cad146100a2578063485cc955146100aa578063715018a6146100bd575b600080fd5b6100a061013f565b005b6100a06102ac565b6100a06100b8366004610808565b610475565b6100a061051b565b6033546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6100f860655481565b6040519081526020016100e6565b6067546100d2906001600160a01b031681565b6100a0610127366004610841565b610581565b6066546100d2906001600160a01b031681565b6033546001600160a01b031633148061016257506067546001600160a01b031633145b6101a65760405162461bcd60e51b815260206004820152601060248201526f6f6e6c79206f776e6572206f7220676d60801b60448201526064015b60405180910390fd5b6066546040516370a0823160e01b81523060048201526001600160a01b039091169063a9059cbb90339083906370a082319060240160206040518083038186803b1580156101f357600080fd5b505afa158015610207573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022b919061085e565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561027157600080fd5b505af1158015610285573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a99190610877565b50565b6068546066546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b1580156102f257600080fd5b505afa158015610306573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032a919061085e565b1161036e5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b604482015260640161019d565b61037b4262015180610649565b33600090815260696020526040902054106103d85760405162461bcd60e51b815260206004820152601d60248201527f4f6e636520706572206163636f756e7420666f7220323420686f757273000000604482015260640161019d565b60665460685460405163a9059cbb60e01b815233600482015260248101919091526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b15801561042857600080fd5b505af115801561043c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104609190610877565b50336000908152606960205260409020429055565b600054610100900460ff168061048e575060005460ff16155b6104aa5760405162461bcd60e51b815260040161019d90610899565b600054610100900460ff161580156104cc576000805461ffff19166101011790555b6104d461065c565b606680546001600160a01b038086166001600160a01b03199283161790925560678054928516929091169190911790558015610516576000805461ff00191690555b505050565b6033546001600160a01b031633146105755760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161019d565b61057f60006106d7565b565b6033546001600160a01b031633146105db5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161019d565b6001600160a01b0381166106405760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161019d565b6102a9816106d7565b600061065582846108e7565b9392505050565b600054610100900460ff1680610675575060005460ff16155b6106915760405162461bcd60e51b815260040161019d90610899565b600054610100900460ff161580156106b3576000805461ffff19166101011790555b6106bb610729565b6106c3610793565b80156102a9576000805461ff001916905550565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1680610742575060005460ff16155b61075e5760405162461bcd60e51b815260040161019d90610899565b600054610100900460ff161580156106c3576000805461ffff191661010117905580156102a9576000805461ff001916905550565b600054610100900460ff16806107ac575060005460ff16155b6107c85760405162461bcd60e51b815260040161019d90610899565b600054610100900460ff161580156107ea576000805461ffff19166101011790555b6106c3336106d7565b6001600160a01b03811681146102a957600080fd5b6000806040838503121561081b57600080fd5b8235610826816107f3565b91506020830135610836816107f3565b809150509250929050565b60006020828403121561085357600080fd5b8135610655816107f3565b60006020828403121561087057600080fd5b5051919050565b60006020828403121561088957600080fd5b8151801515811461065557600080fd5b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60008282101561090757634e487b7160e01b600052601160045260246000fd5b50039056fea264697066735822122099735dfcda723bab9bbd086128772860d9b8247f260ca368a9d4a20c43398b1164736f6c63430008090033";

export class Faucet__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & {from?: string | Promise<string>}
  ): Promise<Faucet> {
    return super.deploy(overrides || {}) as Promise<Faucet>;
  }
  getDeployTransaction(
    overrides?: Overrides & {from?: string | Promise<string>}
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Faucet {
    return super.attach(address) as Faucet;
  }
  connect(signer: Signer): Faucet__factory {
    return super.connect(signer) as Faucet__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FaucetInterface {
    return new utils.Interface(_abi) as FaucetInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Faucet {
    return new Contract(address, _abi, signerOrProvider) as Faucet;
  }
}
